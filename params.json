{"name":"Libsm3","tagline":"Chinese SM3 Cryptographic Hash Algorithm","body":"About\r\n=====\r\n\r\nSM3 Cryptographic Hash Algorithm is a chinese national cryptographic hash\r\nalgorithm standard published by the State Cryptography Administration Office \r\nof Security Commercial Code Administration (OSCCA) of China in December 2010.\r\nA draft of this algorithm can be found at\r\n\r\n[http://tools.ietf.org/html/draft-shen-sm3-hash-00](http://tools.ietf.org/html/draft-shen-sm3-hash-00 \"RFC Draft\")\r\n\r\n\r\nThe SM3 take input messages as 512 bits blocks and generates\r\n256 bits digest values, same as SHA-256.\r\n\r\nThis project provides an open source C implementation of SM3 hash\r\nalgorithm. The project includes a library with init, update, final style of\r\ninterfaces and an command line tool.\r\n\r\nInstall\r\n=======\r\n\r\n\t./configure\r\n\tmake\r\n\tsudo make install\r\n\r\n\r\nTry the command line tool\r\n\r\n\techo -n abc | sm3\r\n\t66c7f0f462eeedd9d1f2d46bdc10e4e24167c4875cf2f7a2297da02b8f4ba8e0\r\n\r\nIf libsm3.so can not be found on Linux, run\r\n\r\n\tsudo ldconfig -v\r\n\r\nUsage\r\n=====\r\n\r\nThe libsm3 library provides the following C API:\r\n\r\n\tvoid sm3_init(sm3_ctx_t *ctx);\r\n\tvoid sm3_update(sm3_ctx_t *ctx, const unsigned char* data, size_t data_len);\r\n\tvoid sm3_final(sm3_ctx_t *ctx, unsigned char digest[SM3_DIGEST_LENGTH]);\r\n\tvoid sm3_compress(uint32_t digest[8], const unsigned char block[SM3_BLOCK_SIZE]);\r\n\tvoid sm3(const unsigned char *data, size_t datalen, unsigned char digest[SM3_DIGEST_LENGTH]);\r\n\r\n\tvoid hmac_sm3_init(hmac_sm3_ctx_t *ctx, const unsigned char *key, size_t key_len);\r\n\tvoid hmac_sm3_update(hmac_sm3_ctx_t *ctx, const unsigned char *data, size_t data_len);\r\n\tvoid hmac_sm3_final(hmac_sm3_ctx_t *ctx, unsigned char mac[HMAC_SM3_MAC_SIZE]);\r\n\tvoid hmac_sm3(const unsigned char *data, size_t data_len,\r\n\t\tconst unsigned char *key, size_t key_len, unsigned char mac[HMAC_SM3_MAC_SIZE]);\r\n\r\nExample on using C API to digest a message:\r\n\r\n\tunsigend char buffer[SM3_DIGEST_LENGTH];\r\n\tsm3(\"hello\", strlen(\"hello\"), buffer);\r\n\r\nExample on using C API to digest a stream:\r\n\r\n\tunsigned char dgst[SM3_DIGEST_LENGTH];\r\n\tsm3_ctx_t ctx;\r\n\tsm3_init(&ctx);\r\n\tsm3_update(&ctx, \"hello\", strlen(\"hello\"));\r\n\tsm3_update(&ctx, \"world\", strlen(\"world\"));\r\n\tsm3_final(&ctx, dgst);\r\n\r\nExample on using C API to generate a HMAC tag:\r\n\r\n\tunsigned char mac[HMAC_SM3_MAC_SIZE];\r\n\thmac_sm3_ctx_t ctx;\r\n\tunsigned char key[16];\r\n\thmac_sm3_init(&ctx, key, sizeof(key));\r\n\thmac_sm3_update(&ctx, \"hello\", strlen(\"hello\"));\r\n\thmac_sm3_update(&ctx, \"world\", strlen(\"world\"));\r\n\thmac_sm3_final(&ctx, mac);\r\n\r\nBenchmark\r\n=========\r\n\r\nTo be add ...\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}